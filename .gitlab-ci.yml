# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

stages:
  - lint
  - test

linter:
  allow_failure: false
  image: python:3.8.8-alpine
  stage: lint
  script:
    - 'pip install flake8'
    - 'flake8 . --max-line-length=120 --ignore=D203 --exclude=.git,__pycache__'

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install -r requirements.txt
  - wget https://github.com/allure-framework/allurectl/releases/download/1.18.1/allurectl_linux_386 -O /usr/bin/allurectl
  #    - cp .allure/allurectl /usr/bin/allurectl
  - chmod +x /usr/bin/allurectl


test_api:
  when: on_success
  stage: test
  script:
    - pytest -v --alluredir=allure-results tests/api_test/

  after_script:
    - allurectl upload allure-results


test_ui:
  when: on_success
  stage: test
  services:
    - selenium/standalone-chrome
  variables: 
    JAVA_OPTS: selenium.LOGGER.level=INFO

  script:
    - pytest -v --alluredir=allure-results tests/ui_test/

  after_script:
    - allurectl upload allure-results
